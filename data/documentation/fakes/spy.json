{
  "abstract" : [
    {
      "text" : "A Spy is a test double for recording calls to methods, and returning stubbed results.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Fakes\/documentation\/Fakes"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5Fakes3SpyC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Spy"
      }
    ],
    "modules" : [
      {
        "name" : "Fakes"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Spy"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "Spy"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Spy"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Arguments"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Returning"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Spies should be used to verify that Fakes are called correctly, and to provide pre-stubbed values",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "that the Fake returns to the caller.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Fakes\/s28CustomDebugStringConvertibleP",
        "doc:\/\/Fakes\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-3nayo",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-5sj5u",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-67dju",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-9jaml",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(_:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(failure:)-3fdug",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(failure:)-8mp3u",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(finished:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingFailure:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingFallback:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingSuccess:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(success:)-77rd4",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(success:)-m7m8"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/calls"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction()-4u31k",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction()-kn0o",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:)-5bfrl",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:)-9r3zi",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:pendingDelay:)-17v1h",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:pendingDelay:)-5o8zc",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(pendingDelay:)-52uom",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(pendingDelay:)-7qw29",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/clearCalls()",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub()",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(_:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(failure:)-1xoml",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(failure:)-ziqj",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(finished:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(pendingFailure:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(pendingFallback:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(pendingSuccess:)",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(success:)-4kjng",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(success:)-4ll6u",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stubFinished()",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stubPending()"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/CustomDebugStringConvertible-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fakes\/spy"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Fakes/documentation/Fakes": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Swift Fakes",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is an open source collection of Test Doubles for Swift",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Fakes",
  "type" : "topic",
  "url" : "\/documentation\/fakes"
},
"doc://Fakes/documentation/Fakes/Pendable/resolve(delay:)-1bb25": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "resolve"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "delay"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable\/resolve(delay:)-1bb25",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "resolve(delay:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/pendable\/resolve(delay:)-1bb25"
},
"doc://Fakes/documentation/Fakes/Pendable/resolve(delay:)-hvhg": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "resolve"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "delay"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable\/resolve(delay:)-hvhg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "resolve(delay:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/pendable\/resolve(delay:)-hvhg"
},
"doc://Fakes/documentation/Fakes/Spy": {
  "abstract" : [
    {
      "text" : "A Spy is a test double for recording calls to methods, and returning stubbed results.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Spy"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Spy"
    }
  ],
  "role" : "symbol",
  "title" : "Spy",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy"
},
"doc://Fakes/documentation/Fakes/Spy/CustomDebugStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/CustomDebugStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomDebugStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/customdebugstringconvertible-implementations"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction()-4u31k": {
  "abstract" : [
    {
      "text" : "Records that a call was made and returns the value stubbed in the initializer, or using one of the ",
      "type" : "text"
    },
    {
      "code" : "stub()",
      "type" : "codeVoice"
    },
    {
      "text" : " methods.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Returning"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction()-4u31k",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction()-4u31k"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction()-kn0o": {
  "abstract" : [
    {
      "text" : "Records that a call was made and returns the success (or throws an error), as defined by the current stub.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction()-kn0o",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction()-kn0o"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction(_:)-5bfrl": {
  "abstract" : [
    {
      "text" : "Records the arguments and returns the value stubbed in the initializer, or using one of the ",
      "type" : "text"
    },
    {
      "code" : "stub()",
      "type" : "codeVoice"
    },
    {
      "text" : " methods.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Returning"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:)-5bfrl",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(_:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction(_:)-5bfrl"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction(_:)-9r3zi": {
  "abstract" : [
    {
      "text" : "Records the arguments and returns the success (or throws an error), as defined by the current stub.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:)-9r3zi",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(_:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction(_:)-9r3zi"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction(_:pendingDelay:)-17v1h": {
  "abstract" : [
    {
      "text" : "Records the arguments and handles the result according to ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable\/resolve(delay:)-hvhg",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pendingDelay"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:pendingDelay:)-17v1h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(_:pendingDelay:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction(_:pendingdelay:)-17v1h"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction(_:pendingDelay:)-5o8zc": {
  "abstract" : [
    {
      "text" : "Records the arguments and handles the result according to ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable\/resolve(delay:)-1bb25",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This call then throws or returns the success, according to ",
      "type" : "text"
    },
    {
      "code" : "Result.get",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pendingDelay"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(_:pendingDelay:)-5o8zc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(_:pendingDelay:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction(_:pendingdelay:)-5o8zc"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction(pendingDelay:)-52uom": {
  "abstract" : [
    {
      "text" : "Records that a call was made and handles the result according to ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable\/resolve(delay:)-1bb25",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This call then throws or returns the success, according to ",
      "type" : "text"
    },
    {
      "code" : "Result.get",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingDelay"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(pendingDelay:)-52uom",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(pendingDelay:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction(pendingdelay:)-52uom"
},
"doc://Fakes/documentation/Fakes/Spy/callAsFunction(pendingDelay:)-7qw29": {
  "abstract" : [
    {
      "text" : "Records that a call was made and handles the result according to ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable\/resolve(delay:)-hvhg",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callAsFunction"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingDelay"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12TimeIntervala",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/callAsFunction(pendingDelay:)-7qw29",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callAsFunction(pendingDelay:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/callasfunction(pendingdelay:)-7qw29"
},
"doc://Fakes/documentation/Fakes/Spy/calls": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "calls"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/calls",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "calls",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/calls"
},
"doc://Fakes/documentation/Fakes/Spy/clearCalls()": {
  "abstract" : [
    {
      "text" : "Clear out existing call records.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "clearCalls"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/clearCalls()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "clearCalls()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/clearcalls()"
},
"doc://Fakes/documentation/Fakes/Spy/init()-3nayo": {
  "abstract" : [
    {
      "text" : "Create a Spy that returns Void",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-3nayo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init()-3nayo"
},
"doc://Fakes/documentation/Fakes/Spy/init()-5sj5u": {
  "abstract" : [
    {
      "text" : "Create a throwing Spy that is pre-stubbed with a Void Success value",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-5sj5u",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init()-5sj5u"
},
"doc://Fakes/documentation/Fakes/Spy/init()-67dju": {
  "abstract" : [
    {
      "text" : "Create a throwing pendable Spy that is pre-stubbed to return a pending that will block for a bit before returning Void.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-67dju",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init()-67dju"
},
"doc://Fakes/documentation/Fakes/Spy/init()-9jaml": {
  "abstract" : [
    {
      "text" : "Create a pendable Spy that is pre-stubbed to return return a a pending that will block for a bit before returning Void.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init()-9jaml",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init()-9jaml"
},
"doc://Fakes/documentation/Fakes/Spy/init(_:)": {
  "abstract" : [
    {
      "text" : "Create a Spy with the given stubbed value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Returning"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(_:)"
},
"doc://Fakes/documentation/Fakes/Spy/init(failure:)-3fdug": {
  "abstract" : [
    {
      "text" : "Create a throwing Spy that is pre-stubbed with some Failure error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "failure"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(failure:)-3fdug",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(failure:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(failure:)-3fdug"
},
"doc://Fakes/documentation/Fakes/Spy/init(failure:)-8mp3u": {
  "abstract" : [
    {
      "text" : "Create a throwing pendable Spy that is pre-stubbed to throw the given error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "failure"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(failure:)-8mp3u",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(failure:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(failure:)-8mp3u"
},
"doc://Fakes/documentation/Fakes/Spy/init(finished:)": {
  "abstract" : [
    {
      "text" : "Create a pendable Spy that is pre-stubbed to return a finished value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "finished"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(finished:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(finished:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(finished:)"
},
"doc://Fakes/documentation/Fakes/Spy/init(pendingFailure:)": {
  "abstract" : [
    {
      "text" : "Create a throwing pendable Spy that is pre-stubbed to return a pending that will block for a bit before throwing an error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingFailure"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingFailure:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(pendingFailure:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(pendingfailure:)"
},
"doc://Fakes/documentation/Fakes/Spy/init(pendingFallback:)": {
  "abstract" : [
    {
      "text" : "Create a pendable Spy that is pre-stubbed to return return a a pending that will block for a bit before returning the fallback value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingFallback"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingFallback:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(pendingFallback:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(pendingfallback:)"
},
"doc://Fakes/documentation/Fakes/Spy/init(pendingSuccess:)": {
  "abstract" : [
    {
      "text" : "Create a throwing pendable Spy that is pre-stubbed to return a pending that will block for a bit before returning success.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingSuccess"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingSuccess:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(pendingSuccess:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(pendingsuccess:)"
},
"doc://Fakes/documentation/Fakes/Spy/init(success:)-77rd4": {
  "abstract" : [
    {
      "text" : "Create a throwing Spy that is pre-stubbed with some Success value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "success"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(success:)-77rd4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(success:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(success:)-77rd4"
},
"doc://Fakes/documentation/Fakes/Spy/init(success:)-m7m8": {
  "abstract" : [
    {
      "text" : "Create a throwing pendable Spy that is pre-stubbed to return a finished & successful value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "success"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(success:)-m7m8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(success:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(success:)-m7m8"
},
"doc://Fakes/documentation/Fakes/Spy/stub()": {
  "abstract" : [
    {
      "text" : "Update the throwing Spy’s stub to be successful, with the given value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub()"
},
"doc://Fakes/documentation/Fakes/Spy/stub(_:)": {
  "abstract" : [
    {
      "text" : "Update the Spy’s stub to return the given value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Returning"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(_:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(_:)"
},
"doc://Fakes/documentation/Fakes/Spy/stub(failure:)-1xoml": {
  "abstract" : [
    {
      "text" : "Update the throwing Spy’s stub to throw the given error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "failure"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(failure:)-1xoml",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(failure:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(failure:)-1xoml"
},
"doc://Fakes/documentation/Fakes/Spy/stub(failure:)-ziqj": {
  "abstract" : [
    {
      "text" : "Update the throwing pendable Spy’s stub to throw the given error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "failure"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(failure:)-ziqj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(failure:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(failure:)-ziqj"
},
"doc://Fakes/documentation/Fakes/Spy/stub(finished:)": {
  "abstract" : [
    {
      "text" : "Update the pendable Spy’s stub to return the given value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "finished"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(finished:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(finished:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(finished:)"
},
"doc://Fakes/documentation/Fakes/Spy/stub(pendingFailure:)": {
  "abstract" : [
    {
      "text" : "Update the pendable Spy’s stub to be in a pending state.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingFailure"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(pendingFailure:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(pendingFailure:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(pendingfailure:)"
},
"doc://Fakes/documentation/Fakes/Spy/stub(pendingFallback:)": {
  "abstract" : [
    {
      "text" : "Update the pendable Spy’s stub to be in a pending state.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingFallback"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(pendingFallback:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(pendingFallback:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(pendingfallback:)"
},
"doc://Fakes/documentation/Fakes/Spy/stub(pendingSuccess:)": {
  "abstract" : [
    {
      "text" : "Update the pendable Spy’s stub to be in a pending state.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingSuccess"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(pendingSuccess:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(pendingSuccess:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(pendingsuccess:)"
},
"doc://Fakes/documentation/Fakes/Spy/stub(success:)-4kjng": {
  "abstract" : [
    {
      "text" : "Update the throwing pendable Spy’s stub to be successful, with the given value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "success"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(success:)-4kjng",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(success:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(success:)-4kjng"
},
"doc://Fakes/documentation/Fakes/Spy/stub(success:)-4ll6u": {
  "abstract" : [
    {
      "text" : "Update the throwing Spy’s stub to be successful, with the given value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stub"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "success"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stub(success:)-4ll6u",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stub(success:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stub(success:)-4ll6u"
},
"doc://Fakes/documentation/Fakes/Spy/stubFinished()": {
  "abstract" : [
    {
      "text" : "Update the pendable Spy’s stub to be in a pending state.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stubFinished"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stubFinished()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stubFinished()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stubfinished()"
},
"doc://Fakes/documentation/Fakes/Spy/stubPending()": {
  "abstract" : [
    {
      "text" : "Update the pendable Spy’s stub to be in a pending state.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stubPending"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/stubPending()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stubPending()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/stubpending()"
},
"doc://Fakes/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/Fakes\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
},
"doc://Fakes/s8SendableP": {
  "identifier" : "doc:\/\/Fakes\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}