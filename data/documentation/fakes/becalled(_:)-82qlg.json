{
  "abstract" : [
    {
      "text" : "A Nimble matcher for ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " that succeeds when any of the calls to the spy matches the given matchers.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Fakes\/documentation\/Fakes"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Fakes\/documentation\/Fakes\/beCalled(_:)-82qlg"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5Fakes8beCalledy6Nimble7MatcherVyAA3SpyCyxq_GGAEyxGd_tr0_lF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "beCalled"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Arguments"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "genericParameter",
        "text" : "Returning"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble7MatcherV",
        "text" : "Matcher"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Arguments"
      },
      {
        "kind" : "text",
        "text" : ">...) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble7MatcherV",
        "text" : "Matcher"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5Fakes3SpyC",
        "text" : "Spy"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Arguments"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Returning"
      },
      {
        "kind" : "text",
        "text" : ">>"
      }
    ],
    "modules" : [
      {
        "name" : "Fakes"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Function",
    "symbolKind" : "func",
    "title" : "beCalled(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "beCalled"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Arguments"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Returning"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "matchers"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble7MatcherV",
              "text" : "Matcher"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Arguments"
            },
            {
              "kind" : "text",
              "text" : ">...) -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble7MatcherV",
              "text" : "Matcher"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5Fakes3SpyC",
              "text" : "Spy"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Arguments"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Returning"
            },
            {
              "kind" : "text",
              "text" : ">>"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The matchers to run against the calls to spy to verify it has been called correctly",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "matchers"
        }
      ]
    },
    {
      "kind" : "mentions",
      "mentions" : [
        "doc:\/\/Fakes\/documentation\/Fakes\/NimbleIntegration"
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If no matchers are specified, then this matcher will succeed if the spy has been called at all.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "If the Spyâ€™s ",
                  "type" : "text"
                },
                {
                  "code" : "Arguments",
                  "type" : "codeVoice"
                },
                {
                  "text" : " is Equatable, you can use ",
                  "type" : "text"
                },
                {
                  "code" : "BeCalled",
                  "type" : "codeVoice"
                },
                {
                  "text" : " with",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "the expected value. This is the same as ",
                  "type" : "text"
                },
                {
                  "code" : "beCalled(equal(expectedValue))",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "All matchers for a single call must pass in order for this matcher",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "to pass. Specifying multiple matchers DOES NOT verify multiple calls.",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "Passing in multiple matchers is a shorthand for ",
                  "type" : "text"
                },
                {
                  "code" : "beCalled(satisfyAllOf(...))",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/mostRecentlyBeCalled(_:)-9i9t9",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " for when you want to check that",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "only the most recent call to the spy matches the matcher.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "See Also",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fakes\/becalled(_:)-82qlg"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Fakes/documentation/Fakes": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Swift Fakes",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is an open source collection of Test Doubles for Swift",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Fakes",
  "type" : "topic",
  "url" : "\/documentation\/fakes"
},
"doc://Fakes/documentation/Fakes/NimbleIntegration": {
  "abstract" : [
    {
      "text" : "Nimble Matchers to make asserting on ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " significantly nicer.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/NimbleIntegration",
  "kind" : "article",
  "role" : "article",
  "title" : "Nimble Integration",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/nimbleintegration"
},
"doc://Fakes/documentation/Fakes/Spy": {
  "abstract" : [
    {
      "text" : "A Spy is a test double for recording calls to methods, and returning stubbed results.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Spy"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Spy"
    }
  ],
  "role" : "symbol",
  "title" : "Spy",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy"
},
"doc://Fakes/documentation/Fakes/beCalled(_:)-82qlg": {
  "abstract" : [
    {
      "text" : "A Nimble matcher for ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " that succeeds when any of the calls to the spy matches the given matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beCalled"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Returning"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Fakes3SpyC",
      "text" : "Spy"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Returning"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/beCalled(_:)-82qlg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beCalled(_:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/becalled(_:)-82qlg"
},
"doc://Fakes/documentation/Fakes/mostRecentlyBeCalled(_:)-9i9t9": {
  "abstract" : [
    {
      "text" : "A Nimble matcher for ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " that succeeds when the most recent call to the spy matches the given matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mostRecentlyBeCalled"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Returning"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5Fakes3SpyC",
      "text" : "Spy"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Arguments"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Returning"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/mostRecentlyBeCalled(_:)-9i9t9",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mostRecentlyBeCalled(_:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/mostrecentlybecalled(_:)-9i9t9"
}
}
}