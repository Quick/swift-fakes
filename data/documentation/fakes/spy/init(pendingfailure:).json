{
  "abstract" : [
    {
      "text" : "Create a throwing pendable Spy that is pre-stubbed to return a pending that will block for a bit before throwing an error.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Fakes\/documentation\/Fakes",
        "doc:\/\/Fakes\/documentation\/Fakes\/Spy"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingFailure:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Fakes",
    "externalID" : "s:5Fakes3SpyC14pendingFailureACyxAA8PendableOys6ResultOyqd__qd_0_GGGqd_0__tcAJRs_s5ErrorRd_0_r0_lufc",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "convenience"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Success"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "genericParameter",
        "text" : "Failure"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "pendingFailure"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Failure"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "Fakes"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init(pendingFailure:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "convenience"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Success"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Failure"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "pendingFailure"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Failure"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Returning"
            },
            {
              "kind" : "text",
              "text" : " == "
            },
            {
              "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5Fakes8PendableO",
              "text" : "Pendable"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s6ResultO",
              "text" : "Result"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Success"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Failure"
            },
            {
              "kind" : "text",
              "text" : ">>, "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Failure"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s5ErrorP",
              "text" : "Error"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fakes\/spy\/init(pendingfailure:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Fakes/documentation/Fakes": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Swift Fakes",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is an open source collection of Test Doubles for Swift",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Fakes",
  "type" : "topic",
  "url" : "\/documentation\/fakes"
},
"doc://Fakes/documentation/Fakes/Pendable": {
  "abstract" : [
    {
      "text" : "Pendable represents the 2 states that an asynchronous call can be in",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Pendable"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Pendable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Pendable"
    }
  ],
  "role" : "symbol",
  "title" : "Pendable",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/pendable"
},
"doc://Fakes/documentation/Fakes/Spy": {
  "abstract" : [
    {
      "text" : "A Spy is a test double for recording calls to methods, and returning stubbed results.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Spy"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Spy"
    }
  ],
  "role" : "symbol",
  "title" : "Spy",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy"
},
"doc://Fakes/documentation/Fakes/Spy/init(pendingFailure:)": {
  "abstract" : [
    {
      "text" : "Create a throwing pendable Spy that is pre-stubbed to return a pending that will block for a bit before throwing an error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "pendingFailure"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/Spy\/init(pendingFailure:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(pendingFailure:)",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/spy\/init(pendingfailure:)"
}
}
}