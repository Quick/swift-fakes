{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Fakes\/documentation\/Fakes",
        "doc:\/\/Fakes\/documentation\/Fakes\/ResolvableWithFallback"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Fakes\/documentation\/Fakes\/ResolvableWithFallback\/resolveWithFallback()"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:5Fakes22ResolvableWithFallbackP07resolvecD0yyF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "resolveWithFallback"
      },
      {
        "kind" : "text",
        "text" : "()"
      }
    ],
    "modules" : [
      {
        "name" : "Fakes"
      }
    ],
    "required" : true,
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "resolveWithFallback()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "resolveWithFallback"
            },
            {
              "kind" : "text",
              "text" : "()"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fakes\/resolvablewithfallback\/resolvewithfallback()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Fakes/documentation/Fakes": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Swift Fakes",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is an open source collection of Test Doubles for Swift",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Fakes",
  "type" : "topic",
  "url" : "\/documentation\/fakes"
},
"doc://Fakes/documentation/Fakes/ResolvableWithFallback": {
  "abstract" : [
    {
      "text" : "A way to type-erase Pendable, specifically just for resolving with the fallback.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ResolvableWithFallback"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/ResolvableWithFallback",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ResolvableWithFallback"
    }
  ],
  "role" : "symbol",
  "title" : "ResolvableWithFallback",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/resolvablewithfallback"
},
"doc://Fakes/documentation/Fakes/ResolvableWithFallback/resolveWithFallback()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "resolveWithFallback"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/Fakes\/documentation\/Fakes\/ResolvableWithFallback\/resolveWithFallback()",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "resolveWithFallback()",
  "type" : "topic",
  "url" : "\/documentation\/fakes\/resolvablewithfallback\/resolvewithfallback()"
}
}
}